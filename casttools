#!/usr/bin/python
import os
import sys
import json
import string
cast = ""
columns = os.get_terminal_size().columns
rows = os.get_terminal_size().lines
clear = "\u001b[3J\u001b[H\u001b[2J"
def text(): 
	if (len(sys.argv) <= 4) :
		return print("Error: Arguments missing\nSyntax: casttools text [duration] [text] [Output cast]")
	time = float(sys.argv[2])
	text = sys.argv[3]
	filename = sys.argv[4]
	
	header = {"version": 2, "height": rows, "width": columns}
	frames = [[0, "o", ""], [time, "o", clear]]
	for i in range(rows):
		if (i == round(rows/2)):
			frames[0][2] += text.center(columns)
		else:
			frames[0][2] += "\n"
	header = json.dumps(header, ensure_ascii=False)
	frames[0] = json.dumps(frames[0], ensure_ascii=False)
	frames[1] = json.dumps(frames[1], ensure_ascii=False)
	file = open(filename, "w+")

	file.write(header+"\n"+frames[0]+"\n"+frames[1]+"\n")

	file.close()

def append():
	castlines = []
	if (len(sys.argv) <= 4):
			return print("Error: File argument missing\nSyntax: casttools append [Cast 1] [Cast 2] [Output cast]")
	files = [sys.argv[2], sys.argv[3], sys.argv[4]]

	for i, val in enumerate(files):
		if (i == 2):
			files[2] = open(files[2], "w+")
		else:
			files[i] = open(files[i], "r")
	
	lines = files[0].readlines()
	
	header = lines.pop(0)
	castlines = lines
	castlines.insert(0, header)
	duration = json.loads(lines[len(lines)-1])[0]
	
	lines = files[1].readlines()
	lines.pop(0)
	for line in lines:
		line = json.loads(line)
		line[0] += duration
		castlines.append(json.dumps(line)+"\n")
	
	files[2].writelines("".join(castlines))
	for i, val in enumerate(files):
		files[i].close()
	
	print("Done!")

def help():
	return print("""
Cast tools

Commands:
 - help
 - text [duration] [text] [Output cast]
 - append [Cast 1] [Cast 2] [Output cast]
	""")

try:
	if (sys.argv[1] == "help"):
		help()
	elif (sys.argv[1] == "text"):
		text()
	elif (sys.argv[1] == "append"):
		append()
except IndexError:
	help()




